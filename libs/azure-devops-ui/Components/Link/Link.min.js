import{__assign,__extends}from"tslib";import"../../CommonImports";import"../../Core/core.css";import"./Link.css";import*as React from"react";import{FocusGroupContext}from"../../FocusGroup";import{FocusZoneContext}from"../../FocusZone";import{Tooltip}from"../../TooltipEx";import{css,getSafeId,KeyCode}from"../../Util";import{getTabIndex}from"../../Utilities/Focus";var Link=function(o){function e(){var e=null!==o&&o.apply(this,arguments)||this;return e.ref=React.createRef(),e.onClick=function(o){e.handleActivation(o)},e.onKeyPress=function(o){e.props.href||o.which!==KeyCode.enter||e.handleActivation(o)},e.onFocus=function(o){e.props.onFocus&&e.props.onFocus(o),e.props.id&&e.context.onFocus(e.props.id)},e}return __extends(e,o),e.prototype.render=function(){var h=this;return React.createElement(FocusZoneContext.Consumer,null,function(o){var e=h.props,t=e.ariaDescribedBy,r=e.ariaLabel,n=e.ariaExpanded,s=e.ariaHasPopup,a=e.ariaSelected,i=e.className,c=e.draggable,u=e.excludeFocusZone,p=e.target,l=e.dataIsFocusable,d=e.rel,f=e.role,m="a",m=(p&&!d&&(d="noopener"),e.href||e.role||(f="button"),e.href||(m="span"),React.createElement(m,{ref:h.ref,"aria-describedby":getSafeId(t),"aria-expanded":n,"aria-haspopup":s,"aria-label":r,"aria-selected":a,className:css(i,"bolt-link",e.disabled&&"disabled",e.subtle&&"subtle",e.underline&&"underline"),"data-focuszone":!u&&o.focuszoneId,"data-is-focusable":l,download:e.download,draggable:c,href:e.href,id:getSafeId(e.id),onBlur:e.onBlur,onClick:h.onClick,onFocus:h.onFocus,onKeyPress:h.onKeyPress,onMouseEnter:e.onMouseEnter,onMouseLeave:e.onMouseLeave,onMouseOver:e.onMouseOver,onTouchEnd:e.onTouchEnd,onTouchMove:e.onTouchMove,onTouchStart:e.onTouchStart,rel:d,role:f,tabIndex:getTabIndex(h.props,h.context),target:p},h.props.children));return m=e.tooltipProps?React.createElement(Tooltip,__assign({},e.tooltipProps),m):m})},e.prototype.focus=function(){this.ref.current&&this.ref.current.focus()},e.prototype.handleActivation=function(o){o.defaultPrevented||(this.props.disabled?o.preventDefault():this.props.onClick&&this.props.onClick(o))},e.contextType=FocusGroupContext,e}(React.Component);export{Link};